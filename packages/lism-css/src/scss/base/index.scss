@use '../_mixin' as mixin;

@forward './property';
@forward './tokens';

// 各html要素のベーススタイル
@forward './dom';

:root,
.re--sh {
	// Memo: カラー変数込みで変数をセットしてしまうと、--_shc がその時点で固定される。
	--_shc: hsl(var(--_shc-hsl) / var(--_shc-a));
	--bxsh-10: var(--_shsz-0) var(--_shc), var(--_shsz-1) var(--_shc);
	--bxsh-20: var(--_shsz-1) var(--_shc), var(--_shsz-2) var(--_shc);
	--bxsh-30: var(--_shsz-2) var(--_shc), var(--_shsz-3) var(--_shc);
	--bxsh-40: var(--_shsz-3) var(--_shc), var(--_shsz-4) var(--_shc);
	--bxsh-50: var(--_shsz-4) var(--_shc), var(--_shsz-5) var(--_shc);

	--bxsh-i10: inset var(--_shsz-0) var(--_shc), inset var(--_shsz-1) var(--_shc);
	--bxsh-i20: inset var(--_shsz-1) var(--_shc), inset var(--_shsz-2) var(--_shc);
	// --bxsh-i3: inset var(--_shsz-2) var(--_shc), inset var(--_shsz-3) var(--_shc);
}

// Note: d--modalに使われる
@include mixin.maybe_where('.re--style', '') {
	width: auto;
	height: auto;
	color: inherit;
	background: none;
	border: none;
	padding: 0;
	// margin: 0;
	font: inherit;
}

// classを持たない素の ul,ol はブラウザ標準のスタイルを復活させる
.re--list,
:is(ul, ol):where(:not([class])) {
	--list--pis: 1.5em;
	list-style: revert;
}
