---
import { Image } from 'astro:assets';
import Button from '~/components/ex/Button/index.astro';
import { Lism, Grid, GridItem, Icon } from 'lism-css/astro';
// import { PAGE_TITLE_ID } from '@astrojs/starlight/constants';
// import LinkButton from '@astrojs/starlight/user-components/LinkButton.astro';
// import { LinkButton } from '@astrojs/starlight/components/';

// import Orb from './component/Orb';

const PAGE_TITLE_ID = '_id';
const { data } = Astro.locals.starlightRoute.entry;
const { title = data.title, tagline, image, actions = [] } = data.hero || {};
---

<Grid class='hero l--grid' variant='repeat' cols='3' rows='1' minH={['50svh', '75vh']} ai='c'>
	<GridItem class='hero__content l--stack -g:50' gc='1 / 3' gr='1' z='1'>
		<div class='l--stack -g:5 copy'>
			<div class='h1-wrap u--clipText -w:fit'>
				<h1 id={PAGE_TITLE_ID} data-page-title set:html={title} />
			</div>
			{tagline && <div class='tagline' set:html={tagline} />}
		</div>
		{
			actions.length > 0 && (
				<div class='l--flex -g:30'>
					{actions.map(({ attrs: { class: className, ...attrs } = {}, icon, link: href, text, variant }) => (
						<Button {href} {variant} icon={icon?.name} class:list={[className]} g='10' bdrs='99' {...attrs}>
							<span class='-pos:r'>{text}</span>
							{variant === 'primary' && (
								<Icon lh='1' fz='l'>
									<Fragment>üìñ</Fragment>
								</Icon>
							)}
							{variant === 'secondary' && <Icon lh='1' fz='l' icon='logo-github' />}
						</Button>
					))}
				</div>
			)
		}
	</GridItem>
	<GridItem class='hero__image' gc='2 / 4' gr='1' pb='20' z='0'>
		<Lism class='grad-box -pos:r'>
			<!-- <div class='orb-outer' style={{ width: '100%', height: '100%', position: 'absolute' }}>
				<Orb client:load hue={0} />
			</div> -->
			<div class='gradient-frame-outer -mis:a'>
				<div class='gradient-frame'>
					<div class='gradient-shape shape3'></div>
					<div class='gradient-shape shape3-2'></div>
					<div class='gradient-shape shape2'></div>
					<div class='gradient-shape shape2-2'></div>
					<div class='gradient-shape shape1'></div>
					<div class='gradient-shape shape1-2'></div>
				</div>
			</div>
			{/* <div class="original-gradient"></div> */}
		</Lism>
	</GridItem>
</Grid>

<!-- <style is:global>
	.orb-container {
		position: relative;
		z-index: 2;
		width: 100%;
		height: 100%;
	}
</style> -->
<style>
	/* .hero {
		background-color: #000;
	} */
	.hero__content {
		min-width: 20rem;
	}
	.h1-wrap {
		--_col_B: rgb(61, 204, 240);
		--_col_C: rgb(136, 103, 255);
		background-image: linear-gradient(120deg, var(--_col_B), var(--_col_C));
	}
	h1[data-page-title] {
		/* font-family: var(--ff-accent); */
		letter-spacing: 0.025em;
		font-weight: bold;
		font-size: 4rem;
		text-shadow: 4px 4px 40px rgb(255 255 255 / 0.25);
	}
	.tagline {
		font-size: var(--fz-m);
		color: var(--c-text-2);
	}

	@keyframes rotate-shape {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(360deg);
		}
	}
	@keyframes yurayura {
		0% {
			filter: blur(8px);
			inset: -10px -20px;
		}
		100% {
			filter: blur(4px);
			inset: -20px -10px;
		}
	}
	@keyframes transform-shape {
		0% {
			scale: 1 0.98;
			translate: 0% -4%;
		}
		50% {
			scale: 0.95 1;
			translate: 5% 0;
		}
		100% {
			scale: 1.02 0.98;
			translate: 1% 4%;
		}
	}

	.gradient-frame-outer {
		border-radius: 50%;
		max-width: 100%;
		width: 480px;
		aspect-ratio: 1/1;
		position: relative;
		isolation: isolate;
		animation: rotate-shape 60s linear infinite reverse;

		/* // gradient-frame„Å´ÂæÆÂ¶ô„Å™ÈöôÈñì„Åå„Åß„Åç„Çã„ÅÆ„ÇíÂüã„ÇÅ„Çã
	// &::before{
	// 	position: absolute;
	// 	inset: -1px;
	// 	content: "";
	// 	border-radius: 50%;
	// 	border: solid 2px var(--c-base);
	// 	z-index: 1;
	// 	// filter: blur(50px);
	// } */
	}
	.gradient-frame {
		position: relative;
		z-index: 0;
		overflow: hidden;
		width: 100%;
		height: 100%;
		border-radius: 50%;
		filter: blur(2px);
		animation: transform-shape 5s linear infinite alternate;
	}

	.gradient-shape {
		position: absolute;
		inset: 0;
		border-radius: 50%;
	}

	.shape1 {
		border: solid 20px #fff;
		inset: -20px -20px 0;
		border-radius: 46%;
		opacity: 0.7;
		filter: blur(10px);
		mix-blend-mode: screen;
		/* animation: rotate-shape 30s linear infinite reverse; */
	}
	.shape1-2 {
		border: solid 10px #fff; /*var(--c-base);*/
		animation: yurayura 3s linear infinite alternate;
	}

	.shape2 {
		border: solid 5px #dc9bff;
		inset: 2px;
		filter: blur(10px);
	}
	.shape2-2 {
		border: solid 10px #38e5ff;
		inset: 2px;
		filter: blur(20px);
	}
	.shape3 {
		--_col_A: rgb(235, 163, 163);
		--_col_B: rgb(102, 209, 235);
		--_col_C: rgb(163, 124, 231);
		background-image: conic-gradient(
			from 120deg,
			var(--_col_A) 24deg,
			rgb(170, 197, 167) 80deg,
			var(--_col_B) 120deg,
			var(--_col_C) 200deg,
			var(--_col_C) 220deg,
			var(--_col_B) 240deg,
			rgb(236, 116, 180) 320deg,
			var(--_col_A) 360deg
		);
		animation: rotate-shape 30s linear infinite;
		filter: blur(100px);
		opacity: 0.75;
	}
	.shape3-2 {
		/* top: 40%; */
		inset: 10%;
		background-color: var(--c-base);
		/* mix-blend-mode: screen; */
		filter: blur(40px);
		opacity: 0.5;
	}
</style>
